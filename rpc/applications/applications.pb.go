// Code generated by protoc-gen-go. DO NOT EDIT.
// source: applications/applications.proto

/*
Package applications is a generated protocol buffer package.

It is generated from these files:
	applications/applications.proto

It has these top-level messages:
	ApplicationWatch
	DeleteRequest
	ApplicationWatchRequest
	ApplicationGetRequest
	ApplicationListRequest
	Application
*/
package applications

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/struct"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplicationWatch struct {
	Hearthbeat  bool         `protobuf:"varint,1,opt,name=hearthbeat" json:"hearthbeat,omitempty"`
	Application *Application `protobuf:"bytes,2,opt,name=application" json:"application,omitempty"`
}

func (m *ApplicationWatch) Reset()                    { *m = ApplicationWatch{} }
func (m *ApplicationWatch) String() string            { return proto.CompactTextString(m) }
func (*ApplicationWatch) ProtoMessage()               {}
func (*ApplicationWatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApplicationWatch) GetHearthbeat() bool {
	if m != nil {
		return m.Hearthbeat
	}
	return false
}

func (m *ApplicationWatch) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ApplicationWatchRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ApplicationWatchRequest) Reset()                    { *m = ApplicationWatchRequest{} }
func (m *ApplicationWatchRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplicationWatchRequest) ProtoMessage()               {}
func (*ApplicationWatchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApplicationWatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplicationGetRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *ApplicationGetRequest) Reset()                    { *m = ApplicationGetRequest{} }
func (m *ApplicationGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplicationGetRequest) ProtoMessage()               {}
func (*ApplicationGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ApplicationGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplicationGetRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ApplicationListRequest struct {
	Search *Application `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	Order  string       `protobuf:"bytes,2,opt,name=order" json:"order,omitempty"`
	Page   int32        `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Count  int32        `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
}

func (m *ApplicationListRequest) Reset()                    { *m = ApplicationListRequest{} }
func (m *ApplicationListRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplicationListRequest) ProtoMessage()               {}
func (*ApplicationListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ApplicationListRequest) GetSearch() *Application {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *ApplicationListRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *ApplicationListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ApplicationListRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Application struct {
	Id            string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Version       string                  `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Configuration *google_protobuf.Struct `protobuf:"bytes,4,opt,name=configuration" json:"configuration,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Application) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Application) GetConfiguration() *google_protobuf.Struct {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func init() {
	proto.RegisterType((*ApplicationWatch)(nil), "applications.ApplicationWatch")
	proto.RegisterType((*DeleteRequest)(nil), "applications.DeleteRequest")
	proto.RegisterType((*ApplicationWatchRequest)(nil), "applications.ApplicationWatchRequest")
	proto.RegisterType((*ApplicationGetRequest)(nil), "applications.ApplicationGetRequest")
	proto.RegisterType((*ApplicationListRequest)(nil), "applications.ApplicationListRequest")
	proto.RegisterType((*Application)(nil), "applications.Application")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Applications service

type ApplicationsClient interface {
	List(ctx context.Context, in *ApplicationListRequest, opts ...grpc.CallOption) (Applications_ListClient, error)
	Add(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Get(ctx context.Context, in *ApplicationGetRequest, opts ...grpc.CallOption) (*Application, error)
	Watch(ctx context.Context, in *ApplicationWatchRequest, opts ...grpc.CallOption) (Applications_WatchClient, error)
}

type applicationsClient struct {
	cc *grpc.ClientConn
}

func NewApplicationsClient(cc *grpc.ClientConn) ApplicationsClient {
	return &applicationsClient{cc}
}

func (c *applicationsClient) List(ctx context.Context, in *ApplicationListRequest, opts ...grpc.CallOption) (Applications_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Applications_serviceDesc.Streams[0], c.cc, "/applications.Applications/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &applicationsListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Applications_ListClient interface {
	Recv() (*Application, error)
	grpc.ClientStream
}

type applicationsListClient struct {
	grpc.ClientStream
}

func (x *applicationsListClient) Recv() (*Application, error) {
	m := new(Application)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *applicationsClient) Add(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/applications.Applications/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/applications.Applications/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) Get(ctx context.Context, in *ApplicationGetRequest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/applications.Applications/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) Watch(ctx context.Context, in *ApplicationWatchRequest, opts ...grpc.CallOption) (Applications_WatchClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Applications_serviceDesc.Streams[1], c.cc, "/applications.Applications/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &applicationsWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Applications_WatchClient interface {
	Recv() (*ApplicationWatch, error)
	grpc.ClientStream
}

type applicationsWatchClient struct {
	grpc.ClientStream
}

func (x *applicationsWatchClient) Recv() (*ApplicationWatch, error) {
	m := new(ApplicationWatch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Applications service

type ApplicationsServer interface {
	List(*ApplicationListRequest, Applications_ListServer) error
	Add(context.Context, *Application) (*Application, error)
	Delete(context.Context, *DeleteRequest) (*google_protobuf1.Empty, error)
	Get(context.Context, *ApplicationGetRequest) (*Application, error)
	Watch(*ApplicationWatchRequest, Applications_WatchServer) error
}

func RegisterApplicationsServer(s *grpc.Server, srv ApplicationsServer) {
	s.RegisterService(&_Applications_serviceDesc, srv)
}

func _Applications_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ApplicationListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApplicationsServer).List(m, &applicationsListServer{stream})
}

type Applications_ListServer interface {
	Send(*Application) error
	grpc.ServerStream
}

type applicationsListServer struct {
	grpc.ServerStream
}

func (x *applicationsListServer) Send(m *Application) error {
	return x.ServerStream.SendMsg(m)
}

func _Applications_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Application)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/applications.Applications/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).Add(ctx, req.(*Application))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/applications.Applications/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/applications.Applications/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).Get(ctx, req.(*ApplicationGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ApplicationWatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApplicationsServer).Watch(m, &applicationsWatchServer{stream})
}

type Applications_WatchServer interface {
	Send(*ApplicationWatch) error
	grpc.ServerStream
}

type applicationsWatchServer struct {
	grpc.ServerStream
}

func (x *applicationsWatchServer) Send(m *ApplicationWatch) error {
	return x.ServerStream.SendMsg(m)
}

var _Applications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "applications.Applications",
	HandlerType: (*ApplicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Applications_Add_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Applications_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Applications_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Applications_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _Applications_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "applications/applications.proto",
}

func init() { proto.RegisterFile("applications/applications.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb5, 0xce, 0x1f, 0xe8, 0xa4, 0x45, 0x30, 0xa2, 0xad, 0x71, 0x51, 0x1b, 0x19, 0x90,
	0x72, 0x00, 0xa7, 0x94, 0x63, 0xd5, 0x43, 0x0b, 0x51, 0x85, 0xc4, 0xa1, 0x72, 0x0f, 0x9c, 0x9d,
	0xf5, 0x38, 0xb6, 0x94, 0x64, 0xcd, 0xee, 0xba, 0x12, 0xaf, 0x00, 0xef, 0xca, 0x33, 0xa0, 0xec,
	0x26, 0xcd, 0x3a, 0x60, 0xdf, 0x76, 0x76, 0x7e, 0x9e, 0x99, 0x6f, 0xfc, 0x2d, 0x9c, 0x25, 0x65,
	0x39, 0x2f, 0x78, 0xa2, 0x0b, 0xb1, 0x54, 0x63, 0x37, 0x88, 0x4a, 0x29, 0xb4, 0xc0, 0x7d, 0xf7,
	0x2e, 0x78, 0x3d, 0x13, 0x62, 0x36, 0xa7, 0xb1, 0xc9, 0x4d, 0xab, 0x6c, 0xac, 0xb4, 0xac, 0xb8,
	0xb6, 0x6c, 0x70, 0xb2, 0x9b, 0xa5, 0x45, 0xa9, 0x7f, 0xda, 0x64, 0x28, 0xe0, 0xf9, 0xf5, 0xb6,
	0xd4, 0xf7, 0x44, 0xf3, 0x1c, 0x4f, 0x01, 0x72, 0x4a, 0xa4, 0xce, 0xa7, 0x94, 0x68, 0x9f, 0x0d,
	0xd9, 0xe8, 0x69, 0xec, 0xdc, 0xe0, 0x25, 0x0c, 0x9c, 0xf6, 0xbe, 0x37, 0x64, 0xa3, 0xc1, 0xc5,
	0xab, 0xa8, 0x36, 0xa6, 0x53, 0x34, 0x76, 0xe9, 0xf0, 0x0c, 0x0e, 0xbe, 0xd0, 0x9c, 0x34, 0xc5,
	0xf4, 0xa3, 0x22, 0xa5, 0xf1, 0x19, 0x78, 0x45, 0x6a, 0xba, 0xec, 0xc5, 0x5e, 0x91, 0x86, 0x1f,
	0xe0, 0x78, 0x77, 0xa2, 0x0d, 0x8a, 0xd0, 0x5d, 0x26, 0x0b, 0x5a, 0xc3, 0xe6, 0x1c, 0x4e, 0xe0,
	0xd0, 0xc1, 0x6f, 0x49, 0xb7, 0xc0, 0xe8, 0xc3, 0x93, 0x07, 0x92, 0x6a, 0x33, 0xf5, 0x5e, 0xbc,
	0x09, 0xc3, 0xdf, 0x0c, 0x8e, 0x9c, 0x3a, 0xdf, 0x0a, 0xf5, 0x58, 0xe8, 0x23, 0xf4, 0x15, 0x25,
	0x92, 0xe7, 0xa6, 0x54, 0xab, 0xd2, 0x35, 0x88, 0x2f, 0xa1, 0x27, 0x64, 0x4a, 0x72, 0xdd, 0xc5,
	0x06, 0xab, 0x89, 0xca, 0x64, 0x46, 0x7e, 0x67, 0xc8, 0x46, 0xbd, 0xd8, 0x9c, 0x57, 0x24, 0x17,
	0xd5, 0x52, 0xfb, 0x5d, 0x73, 0x69, 0x83, 0xf0, 0x17, 0x83, 0x81, 0x53, 0x77, 0x77, 0x47, 0x8f,
	0xda, 0xbc, 0xff, 0x6b, 0xeb, 0xd4, 0xb4, 0xe1, 0x15, 0x1c, 0x70, 0xb1, 0xcc, 0x8a, 0x59, 0x25,
	0xed, 0x1f, 0xeb, 0x1a, 0x1d, 0xc7, 0x91, 0x35, 0x46, 0xb4, 0x31, 0x46, 0x74, 0x6f, 0x6c, 0x13,
	0xd7, 0xe9, 0x8b, 0x3f, 0x1e, 0xec, 0x3b, 0xc3, 0x28, 0xfc, 0x0a, 0xdd, 0xd5, 0x7e, 0xf0, 0x6d,
	0xe3, 0x22, 0x9c, 0xf5, 0x05, 0xcd, 0xeb, 0x3a, 0x67, 0x78, 0x09, 0x9d, 0xeb, 0x34, 0xc5, 0x66,
	0xa6, 0xe5, 0x73, 0xbc, 0x82, 0xbe, 0xb5, 0x12, 0x9e, 0xd4, 0xa1, 0x9a, 0xc1, 0x82, 0xa3, 0x7f,
	0x74, 0x4e, 0x56, 0x0f, 0x00, 0x27, 0xd0, 0xb9, 0x25, 0x8d, 0x6f, 0x1a, 0x1b, 0x6c, 0xcd, 0xd4,
	0x36, 0xc5, 0x1d, 0xf4, 0xec, 0xb3, 0x79, 0xd7, 0xc8, 0xb8, 0x26, 0x0e, 0x4e, 0xdb, 0xb1, 0x73,
	0x76, 0xf3, 0x1e, 0x5e, 0x70, 0xb1, 0x88, 0x32, 0x21, 0xb2, 0x62, 0x4e, 0x52, 0x45, 0x3c, 0xcb,
	0x6f, 0x0e, 0x3f, 0x67, 0xb9, 0xc3, 0xde, 0x93, 0x7c, 0x28, 0x38, 0xdd, 0xb1, 0x69, 0xdf, 0xc8,
	0xfa, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x8a, 0x16, 0xfc, 0x34, 0x04, 0x00, 0x00,
}
