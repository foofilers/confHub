// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users/users.proto

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	users/users.proto

It has these top-level messages:
	AddUserRequest
	DeleteRequest
	UserListRequest
	Permission
	User
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddUserRequest struct {
	User     *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AddUserRequest) Reset()                    { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()               {}
func (*AddUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AddUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UserListRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Order string `protobuf:"bytes,2,opt,name=order" json:"order,omitempty"`
	Page  int32  `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Count int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
}

func (m *UserListRequest) Reset()                    { *m = UserListRequest{} }
func (m *UserListRequest) String() string            { return proto.CompactTextString(m) }
func (*UserListRequest) ProtoMessage()               {}
func (*UserListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserListRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *UserListRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *UserListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserListRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Permission struct {
	Application string   `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
	Perm        []string `protobuf:"bytes,2,rep,name=perm" json:"perm,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Permission) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *Permission) GetPerm() []string {
	if m != nil {
		return m.Perm
	}
	return nil
}

type User struct {
	Id          string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Username    string        `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email       string        `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Admin       bool          `protobuf:"varint,4,opt,name=admin" json:"admin,omitempty"`
	Permissions []*Permission `protobuf:"bytes,5,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

func (m *User) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*AddUserRequest)(nil), "users.AddUserRequest")
	proto.RegisterType((*DeleteRequest)(nil), "users.DeleteRequest")
	proto.RegisterType((*UserListRequest)(nil), "users.UserListRequest")
	proto.RegisterType((*Permission)(nil), "users.Permission")
	proto.RegisterType((*User)(nil), "users.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users service

type UsersClient interface {
	List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (Users_ListClient, error)
	Add(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (Users_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Users_serviceDesc.Streams[0], c.cc, "/users.Users/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &usersListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Users_ListClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type usersListClient struct {
	grpc.ClientStream
}

func (x *usersListClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *usersClient) Add(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/users.Users/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/users.Users/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersServer interface {
	List(*UserListRequest, Users_ListServer) error
	Add(context.Context, *AddUserRequest) (*User, error)
	Delete(context.Context, *DeleteRequest) (*google_protobuf.Empty, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UsersServer).List(m, &usersListServer{stream})
}

type Users_ListServer interface {
	Send(*User) error
	grpc.ServerStream
}

type usersListServer struct {
	grpc.ServerStream
}

func (x *usersListServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _Users_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Add(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Users_Add_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Users_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Users_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "users/users.proto",
}

func init() { proto.RegisterFile("users/users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xc1, 0x6e, 0x9c, 0x30,
	0x14, 0x94, 0x17, 0x88, 0xc2, 0x43, 0xdd, 0x6a, 0xad, 0x34, 0x42, 0xf4, 0x10, 0x84, 0x54, 0x89,
	0x1e, 0xca, 0x56, 0x1b, 0xa9, 0xf7, 0x6c, 0xdb, 0x5b, 0x2b, 0x45, 0xae, 0xfa, 0x01, 0x04, 0x3f,
	0x88, 0x25, 0xc0, 0xc4, 0x86, 0x56, 0xf9, 0x8e, 0x9e, 0xfa, 0xb7, 0x95, 0x6d, 0xd8, 0xb2, 0xb9,
	0xac, 0x3c, 0xb3, 0xe3, 0xf1, 0x30, 0xef, 0xc1, 0x6e, 0xd2, 0xa8, 0xf4, 0xde, 0xfe, 0x16, 0x83,
	0x92, 0xa3, 0xa4, 0x81, 0x05, 0xc9, 0xdb, 0x46, 0xca, 0xa6, 0xc5, 0xbd, 0x25, 0x1f, 0xa6, 0x7a,
	0x8f, 0xdd, 0x30, 0x3e, 0x3b, 0x4d, 0xf6, 0x1d, 0xb6, 0x77, 0x9c, 0xff, 0xd4, 0xa8, 0x18, 0x3e,
	0x4d, 0xa8, 0x47, 0x7a, 0x03, 0xbe, 0xb9, 0x17, 0x93, 0x94, 0xe4, 0xd1, 0x21, 0x2a, 0x9c, 0xa3,
	0x55, 0xd8, 0x3f, 0x68, 0x02, 0x97, 0x43, 0xa9, 0xf5, 0x6f, 0xa9, 0x78, 0xbc, 0x49, 0x49, 0x1e,
	0xb2, 0x13, 0xce, 0x6e, 0xe0, 0xd5, 0x17, 0x6c, 0x71, 0xc4, 0xc5, 0x6d, 0x0b, 0x1b, 0xc1, 0xad,
	0x57, 0xc8, 0x36, 0x82, 0x67, 0x0d, 0xbc, 0x36, 0x56, 0xdf, 0x84, 0x1e, 0x17, 0xc9, 0x15, 0x04,
	0x4f, 0x13, 0xaa, 0xe7, 0x59, 0xe5, 0x80, 0x61, 0xa5, 0xe2, 0xa8, 0xe6, 0x27, 0x1c, 0xa0, 0x14,
	0xfc, 0xa1, 0x6c, 0x30, 0xf6, 0x52, 0x92, 0x07, 0xcc, 0x9e, 0x8d, 0xb2, 0x92, 0x53, 0x3f, 0xc6,
	0xbe, 0x25, 0x1d, 0xc8, 0x8e, 0x00, 0xf7, 0xa8, 0x3a, 0xa1, 0xb5, 0x90, 0x3d, 0x4d, 0x21, 0x2a,
	0x87, 0xa1, 0x15, 0x55, 0x39, 0x0a, 0xd9, 0xcf, 0x2f, 0xad, 0x29, 0xeb, 0x8c, 0xaa, 0x8b, 0x37,
	0xa9, 0x97, 0x87, 0xcc, 0x9e, 0xb3, 0x3f, 0x04, 0x7c, 0x93, 0xf6, 0xe5, 0x57, 0x98, 0x0a, 0x4c,
	0x15, 0x7d, 0xd9, 0xe1, 0x52, 0xc1, 0x82, 0x4d, 0x1c, 0xec, 0x4a, 0xd1, 0xda, 0x8c, 0x21, 0x73,
	0xc0, 0xb0, 0x25, 0xef, 0x44, 0x6f, 0x43, 0x5e, 0x32, 0x07, 0xe8, 0x2d, 0x44, 0xc3, 0x29, 0xa4,
	0x8e, 0x83, 0xd4, 0xcb, 0xa3, 0xc3, 0x6e, 0xae, 0xfc, 0x7f, 0x7c, 0xb6, 0x56, 0x1d, 0xfe, 0x12,
	0x08, 0x4c, 0x2a, 0x4d, 0x3f, 0x80, 0x6f, 0x8a, 0xa4, 0xd7, 0xab, 0x21, 0xad, 0x9a, 0x4d, 0xd6,
	0xc3, 0xfb, 0x48, 0xe8, 0x7b, 0xf0, 0xee, 0x38, 0xa7, 0x6f, 0x66, 0xf6, 0x7c, 0xee, 0x67, 0x62,
	0xfa, 0x09, 0x2e, 0xdc, 0x1c, 0xe9, 0xd5, 0x4c, 0x9f, 0x8d, 0x35, 0xb9, 0x2e, 0xdc, 0x52, 0x15,
	0xcb, 0x52, 0x15, 0x5f, 0xcd, 0x52, 0x1d, 0xdf, 0xc1, 0xae, 0x92, 0x5d, 0x51, 0x4b, 0x59, 0x8b,
	0xd6, 0x5c, 0xab, 0xea, 0xc7, 0xe3, 0xf6, 0x73, 0xfd, 0x68, 0x5c, 0x7f, 0xa0, 0xfa, 0x25, 0x2a,
	0xbc, 0x27, 0x0f, 0x17, 0xf6, 0xda, 0xed, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x54, 0xe2,
	0xd2, 0xb5, 0x02, 0x00, 0x00,
}
